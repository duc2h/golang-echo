stages:
    - build
    - docker
    - deploy
    
variables:
  REGISTRY_HOST: gcr.io
  KUBE_DEPLOYMENT: $CI_PROJECT_NAME
  KUBE_CONTAINER: $CI_PROJECT_NAME-sha256-1
  KUBE_ZONE: asia-southeast1-b
  NAMESPACE: $GCP_PROJECT_NAME-$CI_COMMIT_REF_NAME
  
before_script:
  - echo "GCP_ProjectID $GCP_PROJECT_ID"
  - echo "ProjectName   $CI_PROJECT_NAME"
  - echo "Branch        $CI_COMMIT_REF_NAME"
  - echo "Commit        $CI_COMMIT_SHA"
  - echo "Release image $DEPLOY_TARGET"
    
  # this stage will build golang codes and release execution file 
build:
  image: golang:1.12-alpine
  stage: build
  script:
    - go build --mod=vendor -o app-exe . 
  artifacts:
    paths:
      - app-exe
    expire_in: 2 days
  
  # this stage will pack whole project into docker (require Dockerfile)
.build-template: &build-template
  stage: docker
  image: docker:18.09.8
  services:
    - docker:18.09.8-dind
  before_script:
    - export DOCKER_HOST="tcp://0.0.0.0:2375"
    - docker login -u _json_key --password-stdin https://$REGISTRY_HOST < ./key.json
  script:
  # use CONFIG from variables (set later in specified job) to get secret value, such as DB username/password, secret token, ...
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA -t $DOCKER_IMAGE:$CI_COMMIT_REF_NAME-latest -t $DOCKER_IMAGE:latest --build-arg env=$CI_COMMIT_REF_NAME --build-arg version=$CI_COMMIT_SHA .
    - docker push $DOCKER_IMAGE 
  after_script:
    - docker logout $REGISTRY_HOST

# this stage will deploy to Kubenetes cluster
.deploy-template: &deploy-template
  stage: deploy
  image: google/cloud-sdk:latest
  dependencies: []
  script:
    - gcloud auth activate-service-account --key-file ./key.json
    - gcloud container clusters get-credentials $KUBE_CLUSTER --zone $KUBE_ZONE --project $GCP_PROJECT_ID
    - kubectl set image -n $NAMESPACE deployment $KUBE_DEPLOYMENT $KUBE_CONTAINER=$DEPLOY_TARGET

docker-stg:
  <<: *build-template
  variables:
    GCP_PROJECT_ID: $GCP_PROJECT_ID
    GCLOUD_SA_JSON: $GCLOUD_SA_JSON
    DOCKER_IMAGE: $REGISTRY_HOST/$GCP_PROJECT_ID/$GCP_PROJECT_NAME/$CI_PROJECT_NAME
  tags: # tag of runner
    - dev
  only: # branch
    - stg

deploy-stg:
  <<: *deploy-template
  variables:
    GCP_PROJECT_ID: $GCP_PROJECT_ID_STG
    GCLOUD_SA_JSON: $GCLOUD_SA_JSON_STG
    KUBE_CLUSTER: $KUBE_CLUSTER_STG
    DEPLOY_TARGET: $REGISTRY_HOST/$GCP_PROJECT_ID/$GCP_PROJECT_NAME/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA
  tags:
    - dev
  only: 
    - stg
